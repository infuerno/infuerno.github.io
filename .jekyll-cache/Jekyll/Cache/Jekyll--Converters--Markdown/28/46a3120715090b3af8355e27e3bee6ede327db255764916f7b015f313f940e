I"O
<h2 id="set-up">Set up</h2>

<p>Install the chef-dk from <a href="https://downloads.chef.io/chef-dk/">https://downloads.chef.io/chef-dk/</a>
Install git.</p>

<h2 id="configure-a-resource">Configure a resource</h2>

<ul>
  <li>Use powershell as the shell, run as Administrator</li>
  <li>Create a directory <code class="highlighter-rouge">chef-repo</code> at the root of the home directory and cd into it</li>
  <li>Create recipes written in ruby to manage resources</li>
  <li>
    <p>Resources e.g. <code class="highlighter-rouge">file</code>s have a default action, and recipes declare what state a resource should be in (but not how to achieve that state). In the sample recipe below, the default action for a file is <code class="highlighter-rouge">:create</code> so doesn’t need to be specifed in this instance.</p>

    <p>file ‘C:\Users\Administrator\chef-repo\settings.ini’ do
      action :create
      content ‘greeting=hello world’
  end</p>
  </li>
  <li>Use <code class="highlighter-rouge">chef-apply &lt;filename&gt;</code> to run a recipe directly</li>
  <li>Resources are applied in the order in the recipe, so order is important</li>
  <li>Actions are applied in the order stated, so order is important</li>
  <li>
    <p>Resource attributes are an example where order doesn’t matter</p>

    <p>file ‘C:\temp\settings.ini’ do
      action :create
      mode ‘0755’
      group ‘root’
      owner ‘root’
  end</p>
  </li>
</ul>

<h2 id="using-cookbooks">Using cookbooks</h2>

<ul>
  <li>Create a directory <code class="highlighter-rouge">cookbooks</code> and cd into it</li>
  <li>Use <code class="highlighter-rouge">chef generate cookbook &lt;cookbookname&gt;</code> to create a new cookbook</li>
  <li>Use <code class="highlighter-rouge">tree /F</code> to view the directory contents</li>
  <li>Use <code class="highlighter-rouge">chef generate template &lt;cookbookname&gt; &lt;templatename&gt;</code> to create templates (e.g. index.html.erb), created under templates/default</li>
  <li>Use <code class="highlighter-rouge">chef generate template &lt;cookbookname&gt; &lt;recipename&gt;</code> to create recipes</li>
  <li>
    <p>Use <code class="highlighter-rouge">chef-client</code> to run the cookbook</p>

    <p><code class="highlighter-rouge">chef-client --local-mode --runlist 'recipe[cookbookname]</code> # runs the default recipe in a cookbook
  <code class="highlighter-rouge">chef-client --local-mode --runlist 'recipe[cookbookname::recipename]</code> # to run a specific recipe
  <code class="highlighter-rouge">chef-client -z -o &lt;cookbookname&gt;</code></p>
  </li>
</ul>

:ET