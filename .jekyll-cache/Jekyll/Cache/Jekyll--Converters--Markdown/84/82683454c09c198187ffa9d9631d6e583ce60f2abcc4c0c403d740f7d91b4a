I"ì<p>#Notes to the Reader
##The Design of C++
###Programming style
Language features exist to support programming styles. C++ language feature support four programming styles:</p>

<ul>
  <li>Prodedural programming - design and processing of data structures</li>
  <li>Data abstraction - focussed on the design of interfaces to hide implementation details</li>
  <li>Object-oriented programming - design, implementation and use of class hierarchies providing run-time polymorphism and encapsulation</li>
  <li>Generic programming - general algorithms which accept a wide variety of types as long as the algorithmâ€™s requirements on its types are satisfied</li>
</ul>

<p>###Type checking
Static types and compile time checking is central to C++.</p>

<p>##Learning C++
C++ is a language that you can grow with.</p>

<p>To gain the benefits of C++, programmers coming to it from a different language must learn and internalize idiomatic C++ programming style and technique. The same applies to pro- grammers used to earlier and less expressive versions of C++.</p>

<p>Some guidelines:</p>

<ul>
  <li>Prefer statically type-checked solutions (when applicable).</li>
  <li>Keep information local (e.g., avoid global variables, minimize the use of pointers).</li>
  <li>Donâ€™t overabstract (i.e., donâ€™t generalize, introduce class hierarchies, or parameterize beyond obvious needs and experience).</li>
</ul>

<p>##Exercises</p>
<ol>
  <li>
    <p>(*1) What does (2.5) mean for an exercise?</p>

    <p>It will take between 1 hour and 1 day, it is a little more than a drill, but not fantastically challenging.</p>
  </li>
  <li>
    <p>(*2) Briefly describe the design aims of C++ and comment on the extent to which C++ meets those.</p>
  </li>
  <li>(*4) Write an essay: What can a good programming language do for you and what canâ€™t you expect it to help with?</li>
  <li>
    <p>(*1) What are the main programming styles supported by C++?</p>

    <p>Procedural programming, data abstraction, object-oriented programming, generic programming</p>
  </li>
  <li>(*2.5) List five language features offered by the 1985 version of C++, five features added by C++98, and finally five new features added by C++11. In each case, order the features in order of importance and for each feature write a sentence describing its role in programming.</li>
  <li>(*3) Describe the difference between dynamic (run-time) and static (compile-time) type checking and outline the strengths and weaknesses of each.</li>
  <li>(*1.5) List the major components of the C++ standard library.</li>
  <li>(*1.5) List five libraries that you would have liked to be part of the standard.</li>
  <li>(*1) List three (or more) advantages from having a library as part of the standard.</li>
  <li>(*3) List 20 major real-world C++ applications.</li>
  <li>(*2) From Â§1.3 pick five suggestions that to you looks most likely to help improve your programming style.</li>
  <li>(*2) Make a â€˜â€˜top-ten listâ€™â€™ of helpful design and programming rules. Hint: Â§X.2.</li>
</ol>

:ET