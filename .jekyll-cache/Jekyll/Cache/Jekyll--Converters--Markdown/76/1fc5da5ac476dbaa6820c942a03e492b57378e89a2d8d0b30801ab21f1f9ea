I"å	<h2 id="chapter-1-getting-started">Chapter 1 Getting Started</h2>

<p>F7 to open the Object Browser in the right hand side of SSMS</p>

<h3 id="indexes">Indexes</h3>

<p>:Clustered Index
Only 1 per table, the table is literally ordered using the index, using pages. New items are added to the correct â€˜pageâ€™. Analogous to a phonebook being order by surname, forename.</p>

<p>:Non-clustered Index
Up to 999 per table. An index maintained seperately to the table which has pointers to data in the table. Every time a new entry is added, any non-clustered indexes potentially need to be updated.</p>

<h3 id="schemas">Schemas</h3>

<p>Schemas are used to organise tables and objects within the database. Each user has a default schema and can refer to objects within this schema without qualification. Users can also own schemas (but not individual objects). References to objects in schemas other than the userâ€™s default must be qualified with the schema name.</p>

<h2 id="chapter-2-writing-simple-select-queries">Chapter 2 Writing Simple SELECT Queries</h2>

<h3 id="selecting">Selecting</h3>

<ul>
  <li>Using SELECT * is less performant since:
    <ul>
      <li>it may fetch more rows than you really need</li>
      <li>it ignores indexes</li>
    </ul>
  </li>
</ul>

<h3 id="filtering">Filtering</h3>

<ul>
  <li>The <code class="highlighter-rouge">WHERE</code> clause contains <em>predicates</em> evaluating to TRUE, FALSE or UNKNOWN</li>
  <li>Use <code class="highlighter-rouge">BETWEEN</code> to specify an <em>inclusive</em> range of values</li>
  <li>Correspondingly <code class="highlighter-rouge">NOT BETWEEN</code> yields an <em>exclusive</em> range of values</li>
  <li>Data stored in date time fields can be searched by any recognisable date time format - the data is held as an int in the database. Careful of filtering on DateTime fields</li>
  <li>Use <code class="highlighter-rouge">LIKE</code> with <code class="highlighter-rouge">%</code> to specify multiple chars, <code class="highlighter-rouge">_</code> to specify a single character</li>
  <li>Using <code class="highlighter-rouge">LIKE</code> with <code class="highlighter-rouge">[]</code> to specify a range of letters 
  e.g. <code class="highlighter-rouge">Name LIKE 'H[a,e]rry'</code> to match Harry OR Herry
  e.g. <code class="highlighter-rouge">Name LIKE 'H[a-e]rry'</code> to match Harry, Hbrry, Hcrry, Hdrry OR Herry
  e.g. <code class="highlighter-rouge">Name LIKE 'H[^a]rry'</code> to match anything except Harry</li>
  <li></li>
</ul>

:ET