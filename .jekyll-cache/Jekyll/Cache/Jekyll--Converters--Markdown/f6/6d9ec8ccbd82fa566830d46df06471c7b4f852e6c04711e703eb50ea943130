I"Í<h2 id="overview">Overview</h2>

<p>Will check out two of the most common frameworks:</p>
<ul>
  <li>Twitter Bootstrap</li>
  <li>Zurb Foundation</li>
</ul>

<p>Most frameworks can be divided into either simple frameworks or complete frameworks. Simple frameworks will help reset the css or provide a simple grid system. A complete framework offers a complete set of tools including grid, styles, typography, UI components (buttons, forms) and some javascript components.</p>

<p>Furthermore frameworks tend to use common best practises. Dry, reusable, predictable, maintainable and scaleable. Good documentation. Valuable learning tool.</p>

<p>Not to be used as a crutch. Only use a framework if you already know html, css etc. Best used if you have limited time, budget or limited design or coding skills.</p>

<p>Still need to learn how to use how the framework works.</p>

<h2 id="introduction-to-bootstrap">Introduction to Bootstrap</h2>

<p>Currently powers over 1% of the web. Built from the ground up in 2011 by the engineers at Twitter. One of the most complete frameworks. Cross browser. Built with the LESS CSS preprocessor so takes advantage of variables, mixins and nesting. Also contains common jQuery javascript plugins.</p>

<h2 id="downloading-bootstrap">Downloading Bootstrap</h2>

<ul>
  <li>Download from the compiled version from the <a href="http://getbootstrap.com">http://getbootstrap.com</a></li>
  <li>Checkout from original files from GitHub at <a href="https://github.com/twbs/bootstrap">https://github.com/twbs/bootstrap</a></li>
  <li>Download using a package manager such as <a href="http://bower.io">http://bower.io</a></li>
  <li>Reference the CDN versions</li>
</ul>

<h2 id="basic-tags">Basic tags</h2>

<p><code class="highlighter-rouge">class="container"</code> can be used on the main content div to centre the content and setup breakpoints to ensure the design is responsive
<code class="highlighter-rouge">class="page-header"</code> segments off the header
<code class="highlighter-rouge">class="nav"</code> sets up the main navigation styling, additionally style with â€˜nav-tabsâ€™ or â€˜nav-pillsâ€™
<code class="highlighter-rouge">class="jumbotron"</code> gives a section a light grey background and larger font
<code class="highlighter-rouge">class="lead"</code> around a piece of text will ensure it is seperated a little from surrounding content
<code class="highlighter-rouge">class="btn"</code> gives a button appearance, with button modifier classes to change colour, size etc
Alternatively use button groups to group buttons together with <code class="highlighter-rouge">class="btn-group"</code></p>

<h2 id="using-the-grid-system">Using the grid system</h2>

<p>There are 12 grid columns. All columns have to be contained within a <code class="highlighter-rouge">class="row"</code>. Column classes specify the number of grid columns they span e.g. <code class="highlighter-rouge">class="col-2"</code> and also have a size component to specify the behaviour at different size breakpoints. Bootstrap caters for 4 main device sizes and therefore 4 main breakpoints: phone, tablet, desktop and large desktop. <code class="highlighter-rouge">class="col-xs-2</code> will ensure columns are always stacked horizontally whereas <code class="highlighter-rouge">class="col-md-2</code> will stack columns vertical at phone and tablet size, but stack columns horizontally at desktop and large desktop size.</p>

<h3 id="offset">Offset</h3>

<p><code class="highlighter-rouge">col-md-offset-4</code> will offset a column further to the right if required and leave a gap.</p>

<h3 id="nested-rows-and-columns">Nested rows and columns</h3>

<p>Rows can be nested inside columns. The column widths will still be specified in terms of 12 grid columns, but will only have the width of the column containing the row.</p>

<h3 id="responsive-images">Responsive images</h3>

<p>Images donâ€™t always scale to fill their container and may overflow. This can usually be resolved by adding the style <code class="highlighter-rouge">width: 100%; height: auto;</code>. With bootstrap the equivalent class is <code class="highlighter-rouge">class="img-responsive"</code> applied to the img tag.</p>

<h3 id="push-and-pull">Push and pull</h3>

<p>Similar to offset, columns can be pushed to the right and pulled to the left, which can again be controlled according to breakpoint size. e.g. <code class="highlighter-rouge">class="col-md-push-6</code> will push a column right 6 grid columns at device sizes medium and large.</p>

<h3 id="showing-and-hiding-content">Showing and hiding content</h3>

<p>In order to show only some content at smaller device sizes, the <code class="highlighter-rouge">visible</code> and <code class="highlighter-rouge">hidden</code> sets of classes can be used. e.g. <code class="highlighter-rouge">class="visible-lg</code>, <code class="highlighter-rouge">class="hidden-xs</code>. Bootstrap documentation details the exact results.</p>

<h3 id="navigation">Navigation</h3>

<p>The navbar needs to be placed outside of the container div in order to span the whole width of the page. An inner div marked up with the class <code class="highlighter-rouge">container</code> can then be used to ensure the content of the nav is the same width as the contents of the page.</p>
:ET